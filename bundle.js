(()=>{"use strict";var n={28:(n,e,r)=>{r.d(e,{Z:()=>s});var t=r(537),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([n.id,':root {\n  --board-border: 1px solid black;\n}\n\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\n}\n\nheader {\n  text-align: center;\n}\n\n.game {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.player-name {\n  display: grid;\n  justify-items: center;\n}\n\n.player-name > h2 {\n  padding: 10px 20px 10px 20px;\n  transition: all ease 0.5s;\n}\n\n.player-name.active>h2 {\n  background-color: #abebbb;\n}\n\n.player-name.inactive>h2 {\n  background-color: #c2c2c2;\n  color: #4e4e4e;\n}\n\n.gameboard {\n  display: grid;\n  grid-template-columns: repeat(11, 50px);\n  align-content: center;\n  justify-content: center;\n  padding: 10px;\n  margin: 10px;\n}\n\n.col {\n  display: grid;\n  grid-template-rows: repeat(11, 50px);\n}\n\n.row {\n  border-top: var(--board-border);\n  border-left: var(--board-border);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.col:last-child {\n  border-right: var(--board-border);\n}\n\n.row:last-child{\n  border-bottom: var(--board-border);\n}\n\n.col.header,\n.row.header {\n  font-weight: bold;\n  background-color: #e9e9e9;\n}\n\n.ship {\n  background-color: #323246;\n  border: none;\n}\n\n.hit {\n  background-color: #b63d3d;\n}\n\n.hit::after,\n.missed::after {\n  content: "X";\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.gameboard.inactive > .col > .row:not(.hit, .missed, .header):hover {\n  cursor: pointer;\n  background-color: #a7a7a7;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,+BAA+B;AACjC;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,4DAA4D;AAC9D;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,4BAA4B;EAC5B,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,qBAAqB;EACrB,uBAAuB;EACvB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,+BAA+B;EAC/B,gCAAgC;EAChC,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,kCAAkC;AACpC;;AAEA;;EAEE,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;EAEE,YAAY;EACZ,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,yBAAyB;AAC3B",sourcesContent:[':root {\n  --board-border: 1px solid black;\n}\n\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\n}\n\nheader {\n  text-align: center;\n}\n\n.game {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.player-name {\n  display: grid;\n  justify-items: center;\n}\n\n.player-name > h2 {\n  padding: 10px 20px 10px 20px;\n  transition: all ease 0.5s;\n}\n\n.player-name.active>h2 {\n  background-color: #abebbb;\n}\n\n.player-name.inactive>h2 {\n  background-color: #c2c2c2;\n  color: #4e4e4e;\n}\n\n.gameboard {\n  display: grid;\n  grid-template-columns: repeat(11, 50px);\n  align-content: center;\n  justify-content: center;\n  padding: 10px;\n  margin: 10px;\n}\n\n.col {\n  display: grid;\n  grid-template-rows: repeat(11, 50px);\n}\n\n.row {\n  border-top: var(--board-border);\n  border-left: var(--board-border);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.col:last-child {\n  border-right: var(--board-border);\n}\n\n.row:last-child{\n  border-bottom: var(--board-border);\n}\n\n.col.header,\n.row.header {\n  font-weight: bold;\n  background-color: #e9e9e9;\n}\n\n.ship {\n  background-color: #323246;\n  border: none;\n}\n\n.hit {\n  background-color: #b63d3d;\n}\n\n.hit::after,\n.missed::after {\n  content: "X";\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.gameboard.inactive > .col > .row:not(.hit, .missed, .header):hover {\n  cursor: pointer;\n  background-color: #a7a7a7;\n}\n'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],d=t.base?c[0]+t.base:c[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var p=r(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=a(u,t);t.byIndex=s,e.splice(s,0,{identifier:A,updater:h,references:1})}i.push(A)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=r(o[i]);e[s].references--}for(var c=t(n,a),d=0;d<o.length;d++){var l=r(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{const n=(()=>{const n=document.querySelector(".field-one"),e=document.querySelector(".field-two"),r=(n,e,r)=>{const t=document.createElement(n);return e&&"string"==typeof e&&t.classList.add(e),e&&Array.isArray(e)&&t.classList.add(...e),r&&(t.innerText=r),t},t=(n,e,t)=>{const a=r("div","player-name");a.classList.add(t?"active":"inactive");const o=r("h2",void 0,e.name);a.appendChild(o),n.appendChild(a);const i=((n,e)=>{const t=r("div","gameboard");t.classList.add(e?"active":"inactive");let a=65;for(let o=-1;o<10;o+=1){const i=r("div","col");-1===o?i.classList.add("header"):i.dataset.col=o;for(let t=-1;t<10;t+=1){const s=r("div","row");if(-1===o)s.classList.add("header"),-1===t||(s.innerText=t+1);else if(-1===t)s.classList.add("header"),s.innerText=String.fromCharCode(a),a+=1;else{s.dataset.row=t;const r=n[o][t];r.ship&&e&&s.classList.add("ship"),r.hit&&s.classList.add("hit"),r.missed&&s.classList.add("missed")}i.appendChild(s)}t.appendChild(i)}return t})(e.board.getBoard(),t);n.appendChild(i)};return{showBoards:(r,a)=>{(()=>{const r=Array.from(n.childNodes);r.push(...Array.from(e.childNodes)),r.forEach((n=>n.remove()))})(),t(n,r,!0),t(e,a,!1)},invalidMove:()=>{alert("Wrong move!")},missedShot:()=>{alert("Miss! Switching Players ...")},hitShot:()=>{alert("Enemy ship has been hit!")},gameOver:n=>{alert(`Winner is ${n.name}`)}}})(),e=()=>{const n=[];for(let e=0;e<10;e+=1){n[e]=[];for(let r=0;r<10;r+=1)n[e][r]={ship:void 0,hit:!1,missed:!1}}const e=(e,r,t,a=!1)=>{if(e<0||e>9||r<0||r>9||a&&e+t>9||!a&&r+t>9)return!1;const o=(n=>{let e=0;return{hit:()=>{e+=1},isSunk:()=>e>=n}})(t);for(let i=0;i<t;i+=1){let t=a?i:0,s=a?0:i;if(void 0!==n[e+t][r+s]?.ship){for(let o=i-1;o>=0;o-=1)t=a?o:0,s=a?0:o,n[e+t][r+s].ship=void 0;return!1}n[e+t][r+s].ship=o}return o},r=n=>{const t=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),o=Math.random()>.5;e(t,a,n,o)||r(n)};return{getBoard:()=>n,placeShip:e,placeRandomShip:r,receiveAttack:(e,r)=>{if(e<0||e>9||r<0||r>9)return!1;const t=n[e][r].ship;return t?(n[e][r].hit=!0,t.hit(),"hit"):(n[e][r].missed=!0,"miss")},allShipsSunk:()=>0===n.flat().filter((n=>n.ship&&!n.ship.isSunk())).length}},t=(n,e)=>{const r=[];for(let n=0;n<10;n+=1)for(let e=0;e<10;e+=1)r.push([n,e]);for(let n=r.length-1;n>0;n-=1){const e=Math.floor(Math.random()*(n+1));[r[n],r[e]]=[r[e],r[n]]}return{name:n,board:e,attack:(n,e,r)=>n.board.receiveAttack(e,r),randomAttack:n=>{const e=r.pop(),t=e[0],a=e[1];n.board.receiveAttack(t,a)}}};var a=r(379),o=r.n(a),i=r(795),s=r.n(i),c=r(569),d=r.n(c),l=r(565),A=r.n(l),p=r(216),u=r.n(p),h=r(589),f=r.n(h),m=r(28),b={};b.styleTagTransform=f(),b.setAttributes=A(),b.insert=d().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=u(),o()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;const v=(()=>{let r,a,o,i;const s=()=>{r=t("Player One",e()),a=t("Player Two",e()),r.board.placeRandomShip(2),r.board.placeRandomShip(3),r.board.placeRandomShip(3),r.board.placeRandomShip(4),a.board.placeRandomShip(2),a.board.placeRandomShip(3),a.board.placeRandomShip(3),a.board.placeRandomShip(4),o=r,i=a,n.showBoards(o,i)};return{init:s,takeTurn:(e,r)=>{const t=o.attack(i,e,r);return t||n.invalidMove(),"hit"===t&&i.board.allShipsSunk()&&(n.gameOver(o),s()),"miss"===t&&(n.missedShot(),[o,i]=[i,o]),"hit"===t&&n.hitShot(),n.showBoards(o,i),t}}})();function g(n,e){v.takeTurn(n,e),E(document.querySelector(".gameboard.inactive"))}function E(n){n.querySelectorAll(".col[data-col]").forEach((n=>{n.querySelectorAll(".row[data-row]:not(.hit, .missed)").forEach((e=>{e.addEventListener("click",g.bind(this,n.dataset.col,e.dataset.row))}))}))}v.init(),E(document.querySelector(".gameboard.inactive"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,